v 0.8.2

Enhancements:
	- dependencies aren't downloaded always, but only if they aren't already stored locally
	- removed mesh collision shapes from physic being created using a mesh directly (use meshToBulletConverter instead und use FILE shape)
	- load level blocks now until the level is completely loaded by object subsystem
	- added basic tutorial template
	- Random class allows now to set seed value
	- added support for modulative stencil shadows
	- SplashScreen now works also on Windows (use Paint to save as bmp, otherwise it might cause problems)
	- added a FollowComponent, following a target GameObject with given speed
	- added ImageButtonWidget
	- added ToggleButtonWidget
	- added LanguageManager
	- added a sample showing multilanguage usage
	- added possibility to use distance fog (linear, exponential and a second exponential one)
	- added sample application for level editor
	- added sample showing drag & drop
	- added SubtitleWidget for rpg module
	- added TooltipWidget and possibility to add tooltips to every widget
	- added sample showing some widgets in action together with tooltips
	- added MovableTextComponent allowing to show text above a GameObject aligned to camera
	- added basic third person control for rpg module
	- objects in focus in rpg display now their names
	- added hp bar to player character in rpg
	- added possibility to move selected object in level editor (press 'm' to activate object move mode)
	- added possibility to rotate selected object in level editor
	- added possibility to scale selected object in level editor
	- added a first inventory implementation
	- items are collectable now
	- Component::synchronize is now const
	- added HDR compositor and easy to use compositor usage
	- added possibility to take screenshot and added as example to SampleRPG
	- added tests for synchronization and creation of Components

Fixes:
	- cmake now doesn't need to be run twice to build m2etis correctly
	- fixed problem selecting property of a Component or GameObject in level editor while GUIWidget was above a GameObject
	- unregistering from a message type with processing message buffer afterwards can result in assert if a message for this messagetype still was buffered

v 0.8.1

Enhancements:
	- GameObject::getGOC can specify return value now via template
	- GUIWidgets now can be dragged and dropped with calling a callback at drop
	- added a TextManager for easy multilanguage support
	- moved IDManager to API
	- added an EditboxWidget
	- added a TextButtonWidget
	- objects in the level editor now can be selected clicking on their mesh with the mouse
	- right mouse button now can be used to deselect an object in level editor
	- sounds can now be marked as cacheable to speed up creation
	- added basic RPG sample
	- added Item base class with a simple implementation of usable items
	- added first base components for NPCs representing their attributes and their name
	- added basic inventory interface
	- improved build dependency to download archives from server
	- added support for shadows
	- added base material and shader for normal and specular mapping

Fixes:
	- fixed deadlock during shutdown
	- improved performance for waiting subsystems
	- exchanged strings for key states with enum values
	- exchanged ints in Input message through their KeyCode
	- linking against static library offers now all Components

v 0.8.0

Enhancements:
	- added Vec2 implementation to help using GUI caluclations or things like that
	- mouse wheel movement can be handled now
	- added audio subsystem
	- mover can be created now without starting them directly
	- ray tests start position now can be set as offset from objects center
	- mover now can be resetted
	- added possibility to let a mover only drive its way once
	- added possibility to change direction of a mover
	- object and physics subsystem now can be paused and unpaused
	- using shift in input fields now leads to upper case
	- imagesets now can be added dynamically during lifetime
	- added basics of level editor
	- moved math functionality into own submodule
	- message structs now are in the correct sub namespace
	- added a numeric integration method for arrays of data using trapezoidal rule
	- reduced message overhead a bit
	- added horizontal alignment for GUIPrints
	- added possibility to let a subsystem wait for another one

Fixes:
	- meshes can be changed now
	- fixed datatypes being not equal over different compilers, especially 32 and 64 bit, causing game to freeze on 32 bit after about 30 minutes