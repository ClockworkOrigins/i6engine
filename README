##
# Copyright 2012 FAU (Friedrich Alexander University of Erlangen-Nuremberg)
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
##

++++++++++++
+ Building +
++++++++++++

	*********
	* LINUX *
	*********
	* First of all, build all the dependencies. This will take some time (~ 15 minutes)
	* There are several build-scripts, but build-dependencies.sh will run them all
	* You can run the scripts individually, e.g. if you want to rebuild 1 library, but be careful
	* some libraries depends on others (read comments in build-dependencies)

		$ cd dependencies
		$ ./build-dependencies

	* Go back to the main directory, run cmake with the appropriate options (see infos below) and finally make

		$ cd ..
		$ cmake .
		$ make

	* now, you'll find the executables in the bin subdirectory and can run it
	* That's all

	***********
	* WINDOWS *
	***********
	* First of all, build all the dependencies. This will take some time
	* There are several build-scripts, but build-dependencies.bat will run them all
	* You can run the scripts individually, e.g. if you want to rebuild 1 library, but be careful
	* some libraries depends on others (read comments in build-dependencies)
	* build-dependencies.bat and the other build scripts require three tools:
	
		- WinRAR.exe (specify path in build-common.bat)
		- cmake (has to be in path)
		- Visual Studio
		
	* If all these programs are installed, you start the Visual Studio command line
	* (e.g. Start => All programs => Visual Studio => Visual Studio tools => VS2013 x86 Native Tools)
	* and move to i6engine directory. Then just follow the next steps:

		$ cd dependencies
		$ build-dependencies.bat

	* Go back to the main directory, run cmake with the appropriate options (see infos below) and you get your Visual Studio project

		$ cd ..
		$ cmake .

	* now you find a i6engine.sln file you can open in Visual Studio. You can compile it using F7. After this, all library files
	* and the executables are in the bin subdirectory and you can run it
	* That's all

+++++++++++++++++
+ CMAKE Options +
+++++++++++++++++

	* You can specifiy some build options with CMake parameters: (values are the defaults if not specified)

	- With Logging: ISIXE_WITH_LOGGING=OFF
	- With Network:	ISIXE_WITH_NETWORK=OFF
	- With Testing:	ISIXE_WITH_TESTING=OFF
	- With Profiling: ISIXE_WITH_PROFILING=OFF
	- With Scripting: ISIXE_WITH_SCRIPTING=python

	* e.g. This line build the engine with logging, no network, no profiling, scripting, tri6 and no tests

		$ cmake -DISIXE_WITH_LOGGING=ON -DISIXE_WITH_NETWORK=ON .
