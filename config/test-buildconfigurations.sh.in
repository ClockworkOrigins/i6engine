# i6engine
# Copyright (2016) Daniel Bonrath, Michael Baer, All rights reserved.
#
# This file is part of i6engine; i6engine is free software; you can redistribute it and/or
# modify it under the terms of the GNU Lesser General Public
# License as published by the Free Software Foundation; either
# version 2.1 of the License, or (at your option) any later version.
#
# This library is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# Lesser General Public License for more details.
#
# You should have received a copy of the GNU Lesser General Public
# License along with this library; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA

testDir="/tmp/`whoami`/i6engineTest"
currentDir="${PWD}"

CPUCOUNT=$(grep -c "^processor" /proc/cpuinfo)

mkdir -p ${testDir}

cd ${testDir}

echo "Running First Configuration: All Flags ON, Python Scripting"

cmake -DISIXE_WITH_LOGGING=ON -DISIXE_WITH_NETWORK=ON -DISIXE_WITH_PROFILING=ON -DISIXE_WITH_TESTING=ON -DISIXE_WITH_AUDIO=ON -DISIXE_WITH_EDITOR=ON -DISIXE_WITH_SAMPLES=ON -DISIXE_WITH_TOOLS=ON -DISIXE_WITH_RPG=ON -DISIXE_WITH_SCRIPTING="python" @CMAKE_SOURCE_DIR@ > build-log.txt

make -j ${CPUCOUNT} >> build-log.txt

ERRORCODE=$?

if [ ${ERRORCODE} -eq 0 ] then
	echo "First Configuration ran successful"
fi
if [ ${ERRORCODE} -ne 0 ] then
	echo "First Configuration ran not successful"
	cat build-log.txt
fi

rm -rf *

echo "Running Second Configuration: All Flags ON, Lua Scripting"

cmake -DISIXE_WITH_LOGGING=ON -DISIXE_WITH_NETWORK=ON -DISIXE_WITH_PROFILING=ON -DISIXE_WITH_TESTING=ON -DISIXE_WITH_AUDIO=ON -DISIXE_WITH_EDITOR=ON -DISIXE_WITH_SAMPLES=ON -DISIXE_WITH_TOOLS=ON -DISIXE_WITH_RPG=ON -DISIXE_WITH_SCRIPTING="lua" @CMAKE_SOURCE_DIR@ > build-log.txt

make -j ${CPUCOUNT} >> build-log.txt

ERRORCODE=$?

if [ ${ERRORCODE} -eq 0 ] then
	echo "First Configuration ran successful"
fi
if [ ${ERRORCODE} -ne 0 ] then
	echo "First Configuration ran not successful"
	cat build-log.txt
fi

rm -rf *

echo "Running Third Configuration: All Flags OFF"

cmake -DISIXE_WITH_LOGGING=OFF -DISIXE_WITH_NETWORK=OFF -DISIXE_WITH_PROFILING=OFF -DISIXE_WITH_TESTING=OFF -DISIXE_WITH_AUDIO=OFF -DISIXE_WITH_EDITOR=OFF -DISIXE_WITH_SAMPLES=OFF -DISIXE_WITH_TOOLS=OFF -DISIXE_WITH_RPG=OFF -DISIXE_WITH_SCRIPTING="" @CMAKE_SOURCE_DIR@ > build-log.txt

make -j ${CPUCOUNT} >> build-log.txt

ERRORCODE=$?

if [ ${ERRORCODE} -eq 0 ] then
	echo "First Configuration ran successful"
fi
if [ ${ERRORCODE} -ne 0 ] then
	echo "First Configuration ran not successful"
	cat build-log.txt
fi

rm -rf *

echo "Running First Configuration: All Flags OFF, Network ON"

cmake -DISIXE_WITH_LOGGING=OFF -DISIXE_WITH_NETWORK=ON -DISIXE_WITH_PROFILING=OFF -DISIXE_WITH_TESTING=OFF -DISIXE_WITH_AUDIO=OFF -DISIXE_WITH_EDITOR=OFF -DISIXE_WITH_SAMPLES=OFF -DISIXE_WITH_TOOLS=OFF -DISIXE_WITH_RPG=OFF -DISIXE_WITH_SCRIPTING="" @CMAKE_SOURCE_DIR@ > build-log.txt

make -j ${CPUCOUNT} >> build-log.txt

ERRORCODE=$?

if [ ${ERRORCODE} -eq 0 ] then
	echo "First Configuration ran successful"
fi
if [ ${ERRORCODE} -ne 0 ] then
	echo "First Configuration ran not successful"
	cat build-log.txt
fi

rm -rf *

cd ${currentDir}

rm -rf ${testDir}