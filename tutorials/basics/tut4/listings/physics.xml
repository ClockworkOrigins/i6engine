<Component template="PhysicalState">
	<Attribute name="pos">0.0 0.0 0.0</Attribute>
	<Attribute name="rot">1.0 0.0 0.0 0.0</Attribute>
	<Attribute name="scale">1.0 1.0 1.0</Attribute>
	<Attribute name="shapeType">1</Attribute>
	<Attribute name="box">1 1 1</Attribute>
	<Attribute name="mass">10.0</Attribute>
	<Attribute name="friction">1.0</Attribute>
	<Attribute name="collisionGroup">5 1 9</Attribute>
	<Attribute name="shatterInterest">4</Attribute>
	<Attribute name="scale">0.0 0.0 0.0</Attribute>
	<Attribute name="syncPrio">2</Attribute>
	<Attribute name="compound">0</Attribute>
</Component>

i6engine::api::PhysicalStateComponent * physicsComp = new i6engine::api::PhysicalStateComponent(go->getID() + 2, position, rotation, scale);

i6engine::api::attributeMap shapeParams;
shapeParams.insert(std::make_pair("mass", "10.0"));
shapeParams.insert(std::make_pair("friction", "1.0"));
shapeParams.insert(std::make_pair("boxX", "2"));
shapeParams.insert(std::make_pair("boxY", "1"));
shapeParams.insert(std::make_pair("boxZ", "1"));
physicsComp->setCollisionShape(i6engine::api::PhysicalStateComponent::ShapeType::BOX, shapeParams);

namespace RT = i6engine::api::ResponseType;
physicsComp->setCollisionFlags(i6engine::api::CollisionGroup(RT::TRIGGER, 1, 9));
physicsComp->setShatterInterest(i6engine::api::PhysicalStateComponent::ShatterInterest::ALWAYS);

go->setGOC(physicsComp);
physicsComp->Init();
